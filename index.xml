<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chris Negrich</title><link>/</link><description>Recent content on Chris Negrich</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 06 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Bad Reason Fallacy</title><link>/posts/fallacies/bad_reason/</link><pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate><guid>/posts/fallacies/bad_reason/</guid><description>Overview The bad reason fallacy is a formal logical fallacy that comes from arguing a conclusion is bad because a reason for it is bad. This is a fallacy since the conclusion can be true despite being providing a false argument.
Fallacy Names Bad reason fallacy Structure Proposition A because of the argument B. B is false, therefore the proposition A is false.
If A then B because C.</description></item><item><title>Post Hoc Fallacy</title><link>/posts/fallacies/posthoc/</link><pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate><guid>/posts/fallacies/posthoc/</guid><description>Overview This logical fallacy comes from assuming sequential events cause one another.
It should be noted that this fallacy is highly similar to two other fallacies. First, the fallacy of the inverse. If the latter half of the statement is negated, the post hoc fallacy becomes a fallacy of the inverse. Second, the fallacy of affirming the consequent, if A then B; B, therefore A.
Fallacy Names False attribution fallacy Post hoc fallacy This name comes from a Latin phrase &amp;lsquo;post hoc ergo propter hoc&amp;rsquo; which translates to &amp;lsquo;after this, therefore because of this&amp;rsquo;.</description></item><item><title>Euclid Postulates and Notions - Assumptions and Axioms</title><link>/posts/mathematics/euclid_postulates/</link><pubDate>Mon, 05 Jul 2021 00:00:00 +0000</pubDate><guid>/posts/mathematics/euclid_postulates/</guid><description>Postulates - Assumptions Euclid&amp;rsquo;s postulates are a set of basic geometric assumptions that allow for basic shapes to be formed. These postulates are the minimum necessary set of assumptions required for Euclid&amp;rsquo;s proofs.
Postulates (Assumptions):
To draw a straight line from any point to any point A finite straight line is a line between any two points To produce a finite straight line continuous in a straight line A finite continuous straight line exists To Describe a circle with any center and distance A circle can exist with any radius That, if a straight lines falling on two straight lines make the interior angles on the same side less than two right angles, the two straight lines, if produced indefinitely, meet on that side which are the angles less than the two right angles To restate that, two skewed lines will eventually intersect on the side where the angle is acute Notions - Axioms Notions are axioms for Euclid&amp;rsquo;s Elements.</description></item><item><title>Affirming a disjunct</title><link>/posts/fallacies/disjunct/</link><pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate><guid>/posts/fallacies/disjunct/</guid><description>Overview Affirming a disjunct is a logical fallacy that occurs in propositional logic when a disjunct is assumed. The logical operator or is inclusive, meaning it can be A or B or both. This fallacy occurs when a disjunct is assumed. That is the assumption of the terms A implies not B and B implies not A.
Fallacy Names Affirming a disjunct Structure Given A or B.</description></item><item><title>NIST SP800-37 Risk Management Framework for Information Systems and Organizations: A System Life Cycle Approach for Security and Privacy</title><link>/posts/nist/sp800-37/</link><pubDate>Wed, 30 Jun 2021 00:00:00 +0000</pubDate><guid>/posts/nist/sp800-37/</guid><description>Introduction The National Institute of Standards and Technology maintains several important publications about risk management and security as part of its mission to promote innovation and industrial competitiveness [1]. There are several important publications from NIST, but this post will summarize special publication (SP) 800-37 &amp;lsquo;Risk Management Framework for Information Systems and Organizations: A System Life Cycle Approach for Security and Privacy&amp;rsquo;. The target audience for this document is any individual or organization associated with the design, development, implementation, assessment, operation, maintenance, and disposition of information systems [2].</description></item><item><title>CIA and DAD Triads</title><link>/posts/security_concepts/triads/</link><pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate><guid>/posts/security_concepts/triads/</guid><description>CIA and DAD Triads The CIA and DAD are cybersecurity concepts describing the essential objectives and threats to a system.
The CIA triad describes the three major objectives in securing a system. These are confidentiality, integrity, and availability. Confidentiality is important when considering access to data. Unauthorized actors should not be given access to data even if it seems harmless to do so. Integrity refers to the structure of the system itself.</description></item><item><title>Christopher Negrich's Resume</title><link>/posts/resume/resume/</link><pubDate>Wed, 09 Jun 2021 00:00:00 +0000</pubDate><guid>/posts/resume/resume/</guid><description>Personal statement Software engineer with experience designing geometric, security and data science tools utilizing several programming languages. Passionate about math, science, education, software development and security. Education Bachelors of Science in Mathematics graduated cum laude May 2018 Barrett Honors College at Arizona State University, Tempe, Arizona
Professional Certificates Security+ Certificate Earned July 14, 2021 Expires July 14, 2024
Work Experience Sr. Software Algorithms Engineer February 2019 – Current Deca Technologies, Tempe, Arizona Working in Rust and Python to develop tools, algorithms, and heuristics for electronics manufacturing Working to create, manage, and support computing systems deployed internationally using AWS and Docker Volunteer Project Manger August 2017 – May 2019 Arizona State University’s Biodesign Institute, Tempe, Arizona Lead a team of students, architecting and implementing a software toolkit for biological research Taught a team of students skills including: how to program in both R and Python, plan and manage agile projects, use the unix shell, use git, and document software using typesetting languages including Markdown and LaTeX Software Engineer June 2018 – November 2018 Deca Technologies, Tempe, Arizona Worked as part of an agile development team using Github, Jenkins, and Jira for version management Created software that uses computational geometry to improve the efficiency of factory machines Cyber Operations, Analysis, and Research Intern May 2017 – August 2017 Argonne National Laboratory, Lemont, Illinois Designed, authored, tested, and deployed a semi-passive TCP/IP vulnerability scanning tool based on open-source intelligence techniques, utilizing emerging techniques in the field Skills Mathematical education in computational and theoretical geometry, algorithm design, combinatorics, graph theory, and topology</description></item><item><title>Creating a website with hugo</title><link>/posts/tutorials/hugo-basics/</link><pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate><guid>/posts/tutorials/hugo-basics/</guid><description>How to create a website using hugo How this site is built This site is built using hugo. Hugo is a framework for building static html from markdown pages, a theme, and a configuration file for the theme. Markdown is relatively easy to understand and much friendlier to users than html. The configuration file is just a text file containing settings and the theme is some prebuilt html and javascript.</description></item></channel></rss>